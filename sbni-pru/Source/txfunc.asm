	.cdecls C,NOLIST
	%{
		#include "main.h"
		#include "config.h"
	%}

	.ref ||tx_half_delay||
	.ref ||tx_full_delay||
	.ref ||__delay_loop||

;*--------------------------------------------------------------------------------------*
;* Специализированные регистры:
;* R2 - регистр с адресом стека
;* R3 - регистр для хранения адресов программы
;* R14 - регистр для передачи аргументов между функциями
;* R30 - регистр для управления выводами процессора
;* R31 - регистр состояния (в т.ч. вводов процессора)
;*--------------------------------------------------------------------------------------*

	.sect ".text:__transmit_byte"
	.clink
	.global ||__transmit_byte||

;*--------------------------------------------------------------------------------------*
;* void __transmit_byte(unsigned char byte)
;*
;* @ Brief:  Процедура передаёт 1 байт по протоколу SBNI с заранее заданной скоростью
;* @ Param:  byte: Передаваемый байт
;* @ Return: Нет
;*--------------------------------------------------------------------------------------*

||__transmit_byte||:
;*----------------------------------------------------------------------------------------------------*
	SUB		r2, r2, 3					; выделить память в стеке
	SBBO	&r3.w2, r2, 0, 2			; сохранить адрес возврата
	SBBO	&r14.b0, r2, 2, 1			; сохранить аргумент
	LDI		r1, 0						; инициализировать счётчик
$TXL_1:									; Основной цикл
	QBEQ	$TXL_4, r1, 8				; перейти к EXIT, если счётчик равен 8
	LBBO	&r0, r2, 2, 1				; загрузить в r0 аргумент
	LSL		r0, r0, r1					; сдвинуть r0 на r1 бит влево
	AND		r0, r0, 128					; Выделить первый бит r0
	ADD		r1, r1, 1					; инкрементировать счётчик
	QBNE	$TXL_3, r0, 0				; если r0 не равен нулю, перейти к $TXL_3
$TXL_2:
	XOR		r30, r30, SBNI_TX			; переключить уровни SBNI_TX на противоположные
	LDI		r0, ||tx_full_delay||		; загрузить адрес tx_full_delay
	LBBO	&r14, r0, 0, 4				; загрузить значение tx_full_delay
	JAL		r3.w2, ||__delay_loop||		; вызов __delay_loop
	JMP		$TXL_1						; вернуться к основному циклу
$TXL_3:
	XOR		r30, r30, SBNI_TX			; переключить уровни SBNI_TX на противоположные
	LDI 	r0, ||tx_half_delay||		; загрузить адрес tx_half_delay
	LBBO	&r14, r0, 0, 4				; загрузить значение tx_half_delay
	JAL		r3.w2, ||__delay_loop||		; вызов __delay_loop
	XOR		r30, r30, SBNI_TX			; переключить уровни SBNI_TX на противоположные
	LBBO	&r14, r0, 0, 4				; загрузить значение tx_half_delay
	SUB		r14, r14, 5					; скорректировать значение tx_half_delay
	JAL 	r3.w2, ||__delay_loop||		; вызов __delay_loop
	JMP		$TXL_1						; вернуться к основному циклу
$TXL_4:
	LBBO	&r3.w2, r2, 0, 2			; загрузить адрес возврата
	ADD		r2, r2, 3					; освободить память в стеке
	JMP		r3.w2						; перейти к адресу возврата
;*----------------------------------------------------------------------------------------------------*
